// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/reaction-eng/restlib/file (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetArbitraryFile mocks base method
func (m *MockStorage) GetArbitraryFile(arg0 string) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArbitraryFile", arg0)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetArbitraryFile indicates an expected call of GetArbitraryFile
func (mr *MockStorageMockRecorder) GetArbitraryFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArbitraryFile", reflect.TypeOf((*MockStorage)(nil).GetArbitraryFile), arg0)
}

// PostArbitraryFile mocks base method
func (m *MockStorage) PostArbitraryFile(arg0, arg1 string, arg2 io.Reader, arg3 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostArbitraryFile", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostArbitraryFile indicates an expected call of PostArbitraryFile
func (mr *MockStorageMockRecorder) PostArbitraryFile(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostArbitraryFile", reflect.TypeOf((*MockStorage)(nil).PostArbitraryFile), arg0, arg1, arg2, arg3)
}
